// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())

    email    String @unique
    password String

    role Role @default(Admin)

    Clinic   Clinic? @relation(fields: [clinicId], references: [id])
    clinicId String?

    Doctor   Doctor? @relation(fields: [doctorId], references: [id])
    doctorId String?

    Pacient   Pacient? @relation(fields: [pacientId], references: [id])
    pacientId String?

    createdAt DateTime @default(now()) @map("created_at")
    updateAt  DateTime @updatedAt @map("updated_at")

    @@map("user")
}

model Clinic {
    id String @id @default(uuid())

    nameClinic String @unique
    cnpj       String @unique
    phone      String @unique

    user User[]

    doctor Doctor[]

    createdAt DateTime @default(now()) @map("created_at")
    updateAt  DateTime @updatedAt @map("updated_at")

    @@map("clinic")
}

model Doctor {
    id String @id @default(uuid())

    nameDoctor String @unique

    Clinic   Clinic? @relation(fields: [clinicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    clinicId String?

    createdAt DateTime @default(now()) @map("created_at")
    updateAt  DateTime @updatedAt @map("updated_at")

    User User[]

    @@map("doctor")
}

model Pacient {
    id String @id @default(uuid())

    namePacient String @unique

    cnpj  String @unique
    phone String @unique

    user User[]

    createdAt DateTime @default(now()) @map("created_at")
    updateAt  DateTime @updatedAt @map("updated_at")

    @@map("pacient")
}

model Agend {
    id String @id @default(uuid())

    @@map("agend")
}

enum Role {
    Admin
    Doctor
    Pacient
    Clinic
}
